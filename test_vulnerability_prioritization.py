import unittest
import pandas as pd
from main import process_data, calculate_priority

class TestVulnerabilityPrioritization(unittest.TestCase):
    
    def setUp(self):
        """Setup test data"""
        self.test_data = pd.DataFrame({
            'CVE': ['CVE-2024-0001', 'CVE-2024-0002'],
            'CVSS': [9.0, 5.0],
            'Severity': ['Critical', 'Medium'],
            'Source': ['GitHub', 'AWS'],
            'Fixability': ['Fixable', 'Not Fixable'],
            'Due_Date': ['06/01/2024', '07/15/2024'],
            'Discovery': ['05/01/2024', '06/01/2024'],
            'Fixed_Version': ['1.0.1', None]
        })

    def test_process_data(self):
        """Test processing of data"""
        processed_df = process_data(self.test_data)
        self.assertIsNotNone(processed_df)
        self.assertIn('Priority Score', calculate_priority(processed_df).columns)

    def test_priority_scoring(self):
        """Test priority score calculation"""
        processed_df = process_data(self.test_data)
        prioritized_df = calculate_priority(processed_df)
        self.assertGreater(prioritized_df.iloc[0]['Priority Score'], 
                           prioritized_df.iloc[1]['Priority Score'])

if __name__ == '__main__':
    unittest.main()